apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    autopilot.gke.io/resource-adjustment: '{"input":{"containers":[{"name":"kubemq-cluster-1"}]},"output":{"containers":[{"limits":{"ephemeral-storage":"1Gi"},"requests":{"cpu":"500m","ephemeral-storage":"1Gi","memory":"2Gi"},"name":"kubemq-cluster-1"}]},"modified":true}'
    autopilot.gke.io/warden-version: 3.0.42
    kubemq.io/deployment-cluster-id: 43087ca9979551cd6181cd65fad4805148690a1b8c63778fdfee77be99f5b518
    kubemq.io/deployment-created-at: "2025-01-09T15:46:04Z"
    kubemq.io/deployment-id: QMEjJLxvBd1DxEK7qxQfDe
    kubemq.io/deployment-type: cluster
  creationTimestamp: "2025-01-09T15:46:04Z"
  generation: 1
  labels:
    app: kubemq-cluster-1
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:kubemq.io/deployment-cluster-id: {}
          f:kubemq.io/deployment-created-at: {}
          f:kubemq.io/deployment-id: {}
          f:kubemq.io/deployment-type: {}
        f:labels:
          .: {}
          f:app: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"583d3ea1-a21b-4325-ab7f-756f9d10f5f2"}: {}
      f:spec:
        f:persistentVolumeClaimRetentionPolicy:
          .: {}
          f:whenDeleted: {}
          f:whenScaled: {}
        f:podManagementPolicy: {}
        f:replicas: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:prometheus.io/path: {}
              f:prometheus.io/port: {}
              f:prometheus.io/scrape: {}
            f:labels:
              .: {}
              f:app: {}
          f:spec:
            f:containers:
              k:{"name":"kubemq-cluster-1"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"CHECKSUM"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CLUSTER_ENABLE"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CLUSTER_NAME"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"CLUSTER_ROUTES"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:envFrom: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:ports:
                  .: {}
                  k:{"containerPort":5228,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":8080,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":9090,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                  k:{"containerPort":50000,"protocol":"TCP"}:
                    .: {}
                    f:containerPort: {}
                    f:name: {}
                    f:protocol: {}
                f:resources: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext:
              .: {}
              f:fsGroup: {}
            f:serviceAccount: {}
            f:serviceAccountName: {}
            f:terminationGracePeriodSeconds: {}
        f:updateStrategy:
          f:type: {}
    manager: kubemq-operator
    operation: Update
    time: "2025-01-09T15:46:04Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:availableReplicas: {}
        f:collisionCount: {}
        f:currentReplicas: {}
        f:currentRevision: {}
        f:observedGeneration: {}
        f:readyReplicas: {}
        f:replicas: {}
        f:updateRevision: {}
        f:updatedReplicas: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2025-01-09T15:49:14Z"
  name: kubemq-cluster-1
  namespace: kubemq
  ownerReferences:
  - apiVersion: core.k8s.kubemq.io/v1beta1
    blockOwnerDeletion: true
    controller: true
    kind: KubemqCluster
    name: kubemq-cluster-1
    uid: 583d3ea1-a21b-4325-ab7f-756f9d10f5f2
  resourceVersion: "25571"
  uid: c2896f8c-6580-4574-abf8-2823053ff7f9
spec:
  persistentVolumeClaimRetentionPolicy:
    whenDeleted: Retain
    whenScaled: Retain
  podManagementPolicy: OrderedReady
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: kubemq-cluster-1
  serviceName: kubemq-cluster-1
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "8080"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app: kubemq-cluster-1
    spec:
      containers:
      - env:
        - name: CLUSTER_NAME
          value: kubemq-cluster-1
        - name: CLUSTER_ROUTES
          value: kubemq-cluster-1:5228
        - name: CLUSTER_ENABLE
          value: "true"
        - name: CHECKSUM
          value: d1b63c5802a7a4ac5fd51a2661ad1f57b159c2fb31ecdac74c157e2297fb96870c70226abfdfacc19150caea38768107af99059f577bcb733a746e376dbacd7d
        envFrom:
        - secretRef:
            name: kubemq-cluster-1
        - configMapRef:
            name: kubemq-cluster-1
        image: docker.io/kubemq/kubemq:latest
        imagePullPolicy: Always
        name: kubemq-cluster-1
        ports:
        - containerPort: 50000
          name: grpc-port
          protocol: TCP
        - containerPort: 8080
          name: api-port
          protocol: TCP
        - containerPort: 9090
          name: rest-port
          protocol: TCP
        - containerPort: 5228
          name: cluster-port
          protocol: TCP
        resources:
          limits:
            ephemeral-storage: 1Gi
          requests:
            cpu: 500m
            ephemeral-storage: 1Gi
            memory: 2Gi
        securityContext:
          capabilities:
            drop:
            - NET_RAW
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 200
        seccompProfile:
          type: RuntimeDefault
      serviceAccount: kubemq-cluster
      serviceAccountName: kubemq-cluster
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: kubernetes.io/arch
        operator: Equal
        value: amd64
  updateStrategy:
    type: RollingUpdate
status:
  availableReplicas: 3
  collisionCount: 0
  currentReplicas: 3
  currentRevision: kubemq-cluster-1-6cb9ddf6cd
  observedGeneration: 1
  readyReplicas: 3
  replicas: 3
  updateRevision: kubemq-cluster-1-6cb9ddf6cd
  updatedReplicas: 3
